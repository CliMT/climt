os: linux
dist: trusty
sudo: required
services: docker
language: python
python: 3.6


cache:
    - pip
    - directories:
        - ~/build/CliMT/climt/climt/_lib/Linux
        - ~/build/CliMT/climt/climt/_lib/Darwin
env:
    global:
      - TWINE_USERNAME=joy.merwin

  #matrix:
  #  include:
  #    - os: osx
  #      language: generic
  #      env:
  #        - TOXENV=py27
  #        - OMP_NUM_THREADS=1
  #      script: travis_wait 45 tox -e ${TOXENV}

allow_failures:
  - os: osx

before_install:
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-get install gfortran; fi
- echo $PWD
- ls -la climt/_lib/*
- |
    if [[ "$TRAVIS_OS_NAME" == "osx" ]]; 
    then curl -sSL https://rvm.io/mpapis.asc | gpg --import -
    rvm get stable
    brew update > /dev/null
    sudo softwareupdate -i "Command Line Tools (macOS High Sierra version 10.13) for Xcode-10.1" --verbose
    brew cask uninstall oclint
    brew uninstall --ignore-dependencies gcc
    brew install gcc@6
    brew install md5sha1sum
    fi
- if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
      wget https://repo.continuum.io/miniconda/Miniconda2-latest-MacOSX-x86_64.sh -O miniconda.sh;
    else
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh;
    fi
- |
    if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then  
    bash miniconda.sh -b -p $HOME/miniconda
    export PATH="$HOME/miniconda/bin:$PATH"
    hash -r
    conda config --set always_yes yes --set changeps1 no
    conda info -a
    fi

install:
- python -m pip install -r requirements_dev.txt
- python -m pip install -U tox

jobs:
  include:
    - stage: light tests
      env: TOXENV=flake8 CLIMT_ARCH=Linux
      install:
          - python -m pip install -r requirements_dev.txt
          - python -m pip install -U tox
      script:
          - tox -e ${TOXENV}
    - stage: big tests
      env: TOXENV=cov CLIMT_ARCH=Linux
      install:
          - python -m pip install -r requirements_dev.txt
          - python -m pip install -U tox
      script:
          - tox -e ${TOXENV}
    - stage: big tests
      env: TOXENV=py36 CLIMT_ARCH=Linux
      script:
          - tox -e ${TOXENV}
    - stage: big tests
      python: 3.5
      env: TOXENV=py35 CLIMT_ARCH=Linux
      install:
           - source ~/virtualenv/python3.5/bin/activate
           - python -m pip install -r requirements_dev.txt
           - python -m pip install -U tox
      script:
          - tox -e ${TOXENV}
    - stage: big tests
      env: TOXENV=py27 CLIMT_ARCH=Linux
      script:
          - tox -e ${TOXENV}
    - stage: big tests
      dist: xenial
      python: "3.7"
      env: TOXENV=py37 CLIMT_ARCH=Linux
      script:
          - tox -e ${TOXENV}
            #- stage: big tests
            #      os: osx
            #      osx_image: xcode10.1
            #      language: generic
            #      env: PYTHON_VERSION=3.6 TOXENV=py36 CLIMT_ARCH=Darwin OMP_NUM_THREADS=1
            #      install:
            #          - conda create -q -n test-environment python=$PYTHON_VERSION
            #          - source activate test-environment
            #          - conda install --yes numpy==1.15.2 scipy>=0.18.1 cython>=0.25
            #          - python -m pip install -r requirements_dev.txt
            #          - pip install -U tox
            #      script:
            #          - travis_wait 70 tox -e ${TOXENV}
            #    - stage: big tests
            #      os: osx
            #      osx_image: xcode10.1
            #      language: generic
            #      env: PYTHON_VERSION=3.7 TOXENV=py37 CLIMT_ARCH=Darwin OMP_NUM_THREADS=1
            #      install:
            #          - conda create -q -n test-environment python=$PYTHON_VERSION
            #          - source activate test-environment
            #          - conda install --yes numpy==1.15.2 scipy>=0.18.1 cython>=0.25
            #          - python -m pip install -r requirements_dev.txt
            #          - pip install -U tox
            #      script:
            #          - travis_wait 70 tox -e ${TOXENV}
    - stage: wheels
      env: CLIMT_ARCH=Linux CIBW_SKIP='cp33-* cp36-* cp35-* cp34-* cp37-* cp27-manylinux1_i686' CIBW_BEFORE_BUILD="{pip} install pandas==0.20.3"
      script:
        - |
          if [[ $TRAVIS_TAG ]]; then
            python -m pip install cibuildwheel
            cibuildwheel --output-dir wheelhouse
            python -m pip install twine
            python -m twine upload wheelhouse/*.whl
          fi
    - stage: wheels
      env: CLIMT_ARCH=Linux CIBW_SKIP='cp33-* cp36-* cp34-* cp27-* cp37-*  cp35-manylinux1_i686'
      script:
        - |
            if [[ $TRAVIS_TAG ]]; then
            python -m pip install cibuildwheel
            cibuildwheel --output-dir wheelhouse
            python -m pip install twine
            python -m twine upload wheelhouse/*.whl
            fi
    - stage: wheels
      env: CLIMT_ARCH=Linux CIBW_SKIP='cp33-* cp35-* cp34-* cp27-* cp37-*  cp36-manylinux1_i686'
      script:
        - |
            if [[ $TRAVIS_TAG ]]; then
            python -m pip install cibuildwheel
            cibuildwheel --output-dir wheelhouse
            python -m pip install twine
            python -m twine upload wheelhouse/*.whl
            fi
    - stage: wheels
      env: CLIMT_ARCH=Linux CIBW_SKIP='cp33-* cp35-* cp34-* cp27-* cp36-*  cp37-manylinux1_i686'
      script:
        - |
            if [[ $TRAVIS_TAG ]]; then
            python -m pip install cibuildwheel
            cibuildwheel --output-dir wheelhouse
            python -m pip install twine
            python -m twine upload wheelhouse/*.whl
            fi
            #- stage: wheels
            #      os: osx
            #      osx_image: xcode10.1
            #      language: generic
            #      env: CLIMT_ARCH=Darwin CIBW_SKIP='cp33-* cp35-* cp34-* cp27-* cp37-*'
            #      script:
            #        - |
            #            if [[ $TRAVIS_TAG ]]; then
            #            python -m pip install cibuildwheel
            #            travis_wait 70 cibuildwheel --output-dir wheelhouse
            #            python -m pip install twine
            #            python -m twine upload wheelhouse/*.whl
            #            fi
            #    - stage: wheels
            #      os: osx
            #      osx_image: xcode10.1
            #      language: generic
            #      env: CLIMT_ARCH=Darwin CIBW_SKIP='cp33-* cp35-* cp34-* cp27-* cp36-*'
            #      script:
            #        - |
            #            if [[ $TRAVIS_TAG ]]; then
            #            python -m pip install cibuildwheel
            #            travis_wait 70 cibuildwheel --output-dir wheelhouse
            #            python -m pip install twine
            #            python -m twine upload wheelhouse/*.whl
            #            fi


deploy:
  provider: pypi
  distributions: sdist
  user: joy.merwin
  password:
    secure: 1wi2TpypmHwaF1ouioEDTTVtxpCTm3x3dHCembq0S91lk7dP81BrPM+IIO4oEmeVRynp3Urd0Xfi0aigtewRlZZsh+F/iTUCLHtA4iQJqvCscBf3b0oaX6xKkbV9N7VxtwtLnbqYu8UTEgKsaaQnQhCvZGi85esZ1kS8rF412zYkhUqRARP5qIuLn0haY5TF6GSaNnclf/Jh+AyeZ/B8fHKiYcpv6KEqqw6r9HehOVxTNhMQcvkkxdGsGnF4+T8Z8g3IDfwVyCZLCEqtGZpjJ2B1S3541hCkbwJ6kV/ulmyD3EbawxS0VP9Gp1rB+TbEifdpzgWXCGE9davRNhD6zzbgeL+eq/+YN0l4OAv96iR+MJvBt0gOiSAIAf+iZu6CodYVtZbo8UjLlcEd1/tAr4HoQHCFHWD89VZF9+a+6p+YiS4zqgNhbkiqdpgJllU1YKyez2VT+rulDLrt4db2oSlofjcE8iT6nhNFmsh1hWetyP5AqzTLq79hWSCoaZHQwnP9OFGicLIL4KJCN7Q0qRUHikqSdeuv0/ku2vxKM8UrPZIp+7iDpuK7zScYaTiul15XoXckNUH0IqWVxlXonfYR6pnhmwdwcPo7ZvDhtTYQft7zWdGHu+hvm5DRQeyKoOyRnxQgluP6bUmJSFw/5N2pC55f4SQ1PEhJkcbdvZQ=
  on:
    tags: true
    repo: CliMT/climt
    condition: "$TOXENV == py27"
notifications:
  email:
    recipients:
    - mcgibbon@uw.edu
    - joy.monteiro@misu.su.se
